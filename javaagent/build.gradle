/*
 * Copyright (C) 2021, K2N.IO.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
 *
 */

plugins {
  id 'maven-publish'
  id 'java'
  id 'maven'
  id 'signing'
}

repositories {
  mavenCentral ()
  maven { url "https://s01.oss.sonatype.org/content/repositories/snapshots" }
  mavenLocal ()
}

group = 'com.gocypher.cybench'
archivesBaseName = 'cybench-t2b-agent'
version = '1.0-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
  compile 'org.openjdk.jmh:jmh-core:1.32'
  compile 'org.openjdk.jmh:jmh-generator-reflection:1.32'
  compile 'org.javassist:javassist:3.28.0-GA'
  compile 'org.testng:testng:7.4.0'
  compile 'junit:junit:4.13.2'
  compile 'org.junit.jupiter:junit-jupiter-api:5.7.2'
  // compile 'org.openjdk.jmh:jmh-generator-annprocess:1.32'
  runtimeOnly 'com.gocypher.cybench.client:gocypher-cybench-runner:1.2-SNAPSHOT'
  testAnnotationProcessor 'org.openjdk.jmh:jmh-generator-annprocess:1.32'
  testCompile 'org.testng:testng:7.4.0'
  testCompile 'junit:junit:4.13.2'
}

task javadocJar (type: Jar, dependsOn: javadoc) {
  classifier "javadoc"
  from javadoc.destinationDir
}

task sourceJar (type: Jar) {
  classifier "sources"
  from sourceSets.main.allJava
}

artifacts {
  archives javadocJar, sourceJar
}

signing {
  required { gradle.taskGraph.hasTask ("uploadArchives") }
  useGpgCmd ()
  sign configurations.archives
}

// Build, sign, and upload
uploadArchives {
  repositories {
    mavenDeployer {

      // Sign POM
      beforeDeployment { MavenDeployment deployment -> signing.signPom (deployment) }

      // Destination
      repository (url: "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/") {
        authentication (userName: sonatypeUsername, password: sonatypePassword)
      }
      snapshotRepository (url: "https://s01.oss.sonatype.org/content/repositories/snapshots/") {
        authentication (userName: sonatypeUsername, password: sonatypePassword)
      }

      // Add required metadata to POM
      pom.project {
        name project.property ('archivesBaseName')
        description 'Builds JMH benchmarks for unit tests.'
        url 'https://github.com/K2NIO/gocypher-cybench-junit'
        packaging 'jar'

        scm {
          url 'https://github.com/K2NIO/gocypher-cybench-junit'
          connection 'scm:git:git://github.com/K2NIO/gocypher-cybench-junit'
          developerConnection 'scm:git:git//github.com/K2NIO/gocypher-cybench-junit'
        }
        organization {
          name 'K2N.IO'
          url 'https://cybench.io'
        }
        licenses {
          license {
            name 'Apache License 2.0'
            url 'http://www.apache.org/licenses/LICENSE-2.0'
          }
        }

        developers {
          developer {
            name 'CyBench Team'
            email 'info@cybench.io'
            organizationUrl 'https://cybench.io'
          }
        }
      }
    }
  }
}

task release (type: Zip) {
  from 'build/libs/'
  include '*'
  destinationDir (file ('./release'))
}

clean {
  delete 'classes'
  delete 'prod/lib'
  delete fileTree ('prod') {}
}

task copyClientLibs (type: Copy) {
  from {
    configurations.compile
  }
  from jar
  into 'prod/lib'
  include '*.jar'
}

jar {
//
// This will put all the contents from the jars into a single jar
//    from {
//        configurations.compile.collect {
//            it.isDirectory() ? it : zipTree(it)
//        }
//    }

  exclude "META-INF/*.SF"
  exclude "META-INF/*.DSA"
  exclude "META-INF/*.RSA"

  manifest {
    attributes 'Can-Retransform-Classes': true,
               'Can-Redefine-Classes': true,
               'Premain-Class': 'com.gocypher.cybench.Test2BenchmarkAgent'
  }
}

publishing {
  publications {
    maven (MavenPublication) {
      groupId = project.property ('group')
      artifactId = project.property ('archivesBaseName')
      version = project.property ('version')

      from components.java
    }
  }
}

build.finalizedBy (copyClientLibs)

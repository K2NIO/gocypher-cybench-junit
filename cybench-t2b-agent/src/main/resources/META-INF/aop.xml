<aspectj>

    <aspects>
        <!-- declare existing aspects to the weaver -->
        <!--  @Around aspects for unit tests    -->
        <!--        <aspect name="com.gocypher.cybench.t2b.aop.TestAspects.TestAroundAspect"/>-->
        <aspect name="com.gocypher.cybench.t2b.aop.TestAspects.JUTestAroundAspect"/>
        <aspect name="com.gocypher.cybench.t2b.aop.TestAspects.JU5TestAroundAspect"/>
        <aspect name="com.gocypher.cybench.t2b.aop.TestAspects.NGTestAroundAspect"/>

        <!--  @Before and @After aspects for unit tests    -->
        <!--        <aspect name="com.gocypher.cybench.aop.TestAspects.TestBeforeAfterAspect"/>-->

        <!-- Of the set of aspects known to the weaver, use aspects matching
             the type pattern "com..*" for weaving. -->
        <!--        <include within="com..*"/>-->

        <!-- Do not use any aspects with the @CoolAspect annotation for weaving -->
        <!--        <exclude within="@CoolAspect *"/>-->
    </aspects>

    <!--    <weaver options="-verbose -XlazyTjp">-->
    <!-- Weave types that are within the javax.* or org.aspectj.*
         packages. Also weave all types in the foo package that do
         not have the @NoWeave annotation. -->
    <!--        <include within="javax.*"/>-->
    <!--        <include within="org.aspectj.*"/>-->
    <!--        <include within="(!@NoWeave foo.*) AND foo.*"/>-->
    <!--        <dump within="somepack.*"/>&lt;!&ndash; will dump weaved classes to the "./_ajdump" folder on disk (for diagnostic purpose) &ndash;&gt;-->
    <!--    </weaver>-->

</aspectj>